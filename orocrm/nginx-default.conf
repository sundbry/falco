daemon off;

user www-data;

worker_processes 1; 
events {
	worker_connections 64;
}

http {

  log_format nginx '$remote_addr - $remote_user [$time_local] $request_time "$request" $status $bytes_sent "$http_referer" "$http_user_agent"';

  include /etc/nginx/mime.types;

  server {
    # Internal access and monitoring
    listen 81;
    server_name _;
    access_log off;

    location = /nginx/status {
      stub_status;
    }
  }

  server {
    server_name _;
    root /var/www/orocrm/web;
    listen 80;

    client_max_body_size 8m;
    client_body_timeout 60;

    index app.php;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    try_files $uri $uri/ @rewrite;

    location @rewrite {
        rewrite ^/(.*)$ /app.php/$1;
    }

    location ~ /\.ht {
        deny all;
    }

    location ~* ^[^(\.php)]+\.(jpg|jpeg|gif|png|ico|css|txt|bmp|js)$ {
        add_header Cache-Control public;
        expires 1h;
        access_log off;
    }

    location ~ [^/]\.php(/|$) {
        fastcgi_split_path_info ^(.+?\.php)(/.*)$;
        if (!-f $document_root$fastcgi_script_name) {
            return 404;
        }

        include /etc/nginx/fastcgi_params;
        fastcgi_pass localhost:9000;
        fastcgi_index app.php;
        fastcgi_param REQUEST_METHOD $request_method;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
    }

    # Websockets connection path (configured in app/config/parameters.yml)
    location /ws {
        reset_timedout_connection on;

        # prevents 502 bad gateway error
        proxy_buffers 8 32k;
        proxy_buffer_size 64k;

        # redirect all HTTP traffic to localhost:8080;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_pass http://127.0.0.1:8080/;
        proxy_redirect off;
        proxy_read_timeout 86400;

        # enables WS support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        error_log /var/log/nginx/<your_domain_name>_wss_error.log;
        access_log /var/log/nginx/<your_domain_name>_wss_access.log;
    }

  }
  
}
